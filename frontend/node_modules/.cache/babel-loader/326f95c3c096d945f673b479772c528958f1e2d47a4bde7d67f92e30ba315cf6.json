{"ast":null,"code":"import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { SortAscendingMajor, SortDescendingMajor } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { motion, toPx, tokens } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { useIsomorphicLayoutEffect } from '../../utilities/use-isomorphic-layout-effect.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { useIsBulkActionsSticky } from '../BulkActions/hooks/use-is-bulk-actions-sticky.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { SelectAllActions } from '../SelectAllActions/SelectAllActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { LegacyStack } from '../LegacyStack/LegacyStack.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { Text } from '../Text/Text.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nconst SCROLL_BAR_PADDING = 4;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nfunction IndexTableBase(_ref) {\n  let {\n    headings,\n    bulkActions = [],\n    promotedBulkActions = [],\n    children,\n    emptyState,\n    sort,\n    paginatedSelectAllActionText,\n    lastColumnSticky = false,\n    sortable,\n    sortDirection,\n    defaultSortDirection = 'descending',\n    sortColumnIndex,\n    onSort,\n    sortToggleLabels,\n    hasZebraStriping,\n    ...restProps\n  } = _ref;\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const loadingElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(false);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const lastSortedColumnIndex = useRef(sortColumnIndex);\n  const renderAfterSelectEvent = useRef(false);\n  const lastSelectedItemsCount = useRef(0);\n  const hasSelected = useRef(false);\n  if (selectedItemsCount !== lastSelectedItemsCount.current) {\n    renderAfterSelectEvent.current = true;\n    lastSelectedItemsCount.current = selectedItemsCount;\n  }\n  if (!hasSelected.current && selectedItemsCount !== 0) {\n    hasSelected.current = true;\n  }\n  const {\n    bulkActionsIntersectionRef,\n    tableMeasurerRef,\n    isBulkActionsSticky,\n    bulkActionsAbsoluteOffset,\n    bulkActionsMaxWidth,\n    bulkActionsOffsetLeft,\n    computeTableDimensions\n  } = useIsBulkActionsSticky(selectMode);\n  useEffect(() => {\n    computeTableDimensions();\n  }, [computeTableDimensions, itemCount]);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n    if (tableHeadings.current.length === 0) {\n      return;\n    }\n\n    // update left offset for first column\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n\n    // update the min width of the checkbox to be the be the un-padded width of the first heading\n    if (selectable && firstStickyHeaderElement?.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    }\n\n    // update sticky header min-widths\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n      if (index === 0 && (!isBreakpointsXS() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        minWidth = tableHeadingRects.current[index]?.offsetWidth || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        minWidth = tableHeadingRects.current[index - 1]?.offsetWidth || 0;\n      }\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(scrollContainerElement.current?.offsetWidth === tableElement.current?.offsetWidth);\n    }\n  }, [tableInitialized]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1;\n    // Don't consider the last column in the calculations if it's not sticky\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0;\n    // Secure some space for the remaining columns to be visible\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    // hide the scrollbar when resizing\n    scrollBarElement.current?.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    scrollingWithBar.current = false;\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n    scrollingContainer.current = false;\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: getHeadingKey(headings[0]),\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(LegacyStack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0], 0)), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0], 0))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(motion['motion-duration-100'], 10),\n    nodeRef: loadingElement,\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel,\n    ref: loadingElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount;\n  const bulkActionClassNames = classNames(styles.BulkActionsWrapper, isBulkActionsSticky && styles.BulkActionsWrapperSticky);\n  const shouldShowActions = !condensed || selectedItemsCount;\n  const promotedActions = shouldShowActions ? promotedBulkActions : [];\n  const actions = shouldShowActions ? bulkActions : [];\n  const bulkActionsMarkup = shouldShowBulkActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n    className: bulkActionClassNames,\n    style: {\n      insetBlockStart: isBulkActionsSticky ? undefined : bulkActionsAbsoluteOffset,\n      width: bulkActionsMaxWidth,\n      insetInlineStart: isBulkActionsSticky ? bulkActionsOffsetLeft : undefined\n    }\n  }, /*#__PURE__*/React.createElement(BulkActions, {\n    selectMode: selectMode,\n    promotedActions: promotedActions,\n    actions: actions,\n    onSelectModeToggle: condensed ? handleSelectModeToggle : undefined,\n    isSticky: isBulkActionsSticky,\n    width: bulkActionsMaxWidth\n  })) : null;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const selectAllActionsClassName = classNames(styles.SelectAllActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const selectAllActionsMarkup = shouldShowBulkActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: selectAllActionsClassName\n    }, /*#__PURE__*/React.createElement(SelectAllActions, {\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode,\n      onToggleAll: handleTogglePage,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction\n    }), loadingMarkup) : null;\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, (!selectable || condensed) && styles.unselectable)\n    }, loadingMarkup, sort) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableColumnHeader\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = selectAllActionsMarkup ?? headerMarkup;\n    return stickyContent;\n  }), bulkActionsMarkup);\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable?.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling'], hasZebraStriping && styles.ZebraStriping);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const condensedClassNames = classNames(styles.CondensedList, hasZebraStriping && styles.ZebraStriping);\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode),\n    className: condensedClassNames,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  const tableWrapperClassNames = classNames(styles.IndexTableWrapper, Boolean(bulkActionsMarkup) && selectMode && styles.IndexTableWrapperWithBulkActions);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: tableWrapperClassNames,\n    ref: tableMeasurerRef\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), /*#__PURE__*/React.createElement(\"div\", {\n    ref: bulkActionsIntersectionRef\n  })), scrollBarMarkup);\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable?.some(value => value === true);\n    const headingAlignment = heading.alignment || 'start';\n    const headingContentClassName = classNames(styles.TableHeading, headingAlignment === 'center' && styles['TableHeading-align-center'], headingAlignment === 'end' && styles['TableHeading-align-end'], hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading, index));\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n  function handleSortHeadingClick(index, direction) {\n    renderAfterSelectEvent.current = false;\n    hasSelected.current = false;\n    lastSortedColumnIndex.current = sortColumnIndex;\n    onSort?.(index, direction);\n  }\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n    const defaultTooltipProps = {\n      width: heading.tooltipWidth ?? 'default',\n      activatorWrapper: 'div',\n      dismissOnMouseOut: true,\n      persistOnClick: heading.tooltipPersistsOnClick\n    };\n    const defaultHeaderTooltipProps = {\n      ...defaultTooltipProps,\n      padding: '4',\n      borderRadius: '2',\n      content: heading.tooltipContent,\n      preferredPosition: 'above'\n    };\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(LegacyStack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(Text, {\n        as: \"span\",\n        visuallyHidden: true\n      }, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n    if (sortable?.[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isPreviouslySorted = !isCurrentlySorted && index === lastSortedColumnIndex.current;\n      const isRenderAfterSelectEvent = renderAfterSelectEvent.current || !hasSelected.current && selectedItemsCount !== 0;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = heading.defaultSortDirection ?? defaultSortDirection;\n      let SourceComponent = newDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      }\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, heading?.alignment === 'end' && styles['TableHeadingSortIcon-heading-align-end'], isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const defaultSortButtonProps = {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: classNames(styles.TableHeadingSortButton, !isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end'], isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-currently-sorted'], isPreviouslySorted && !isRenderAfterSelectEvent && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-previously-sorted']),\n        tabIndex: selectMode ? -1 : 0\n      };\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, iconMarkup, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(sortToggleLabels && selectMode && heading.tooltipContent && styles.TableHeadingTooltipUnderlinePlaceholder)\n      }, headingContent));\n      if (!sortToggleLabels || selectMode) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.SortableTableHeadingWithCustomMarkup\n        }, sortMarkup);\n      }\n      const tooltipDirection = isCurrentlySorted ? sortDirection : newDirection;\n      const sortTooltipContent = sortToggleLabels[index][tooltipDirection];\n      if (!heading.tooltipContent) {\n        return /*#__PURE__*/(\n          // Regular header with sort icon and sort direction tooltip\n          React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), sortMarkup)\n        );\n      }\n      if (heading.tooltipContent) {\n        return /*#__PURE__*/(\n          // Header text and sort icon have separate tooltips\n          React.createElement(\"div\", {\n            className: styles.SortableTableHeadingWithCustomMarkup\n          }, /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, /*#__PURE__*/React.createElement(Tooltip, defaultHeaderTooltipProps, /*#__PURE__*/React.createElement(\"span\", {\n            className: styles.TableHeadingUnderline\n          }, headingContent)), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), iconMarkup)))\n        );\n      }\n    }\n    if (heading.tooltipContent) {\n      return /*#__PURE__*/(\n        // Non-sortable header with tooltip\n        React.createElement(Tooltip, Object.assign({}, defaultHeaderTooltipProps, {\n          activatorWrapper: \"span\"\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(styles.TableHeadingUnderline, styles.SortableTableHeaderWrapper)\n        }, headingContent))\n      );\n    }\n    return headingContent;\n  }\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingAlignment = heading.alignment || 'start';\n    const headingContent = renderHeadingContent(heading, index);\n    const stickyHeadingClassName = classNames(styles.TableHeading, headingAlignment === 'center' && styles['TableHeading-align-center'], headingAlignment === 'end' && styles['TableHeading-align-end'], index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: getHeadingKey(heading),\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n    const customActionText = paginatedSelectAllActionText ?? i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n  function handleSelectModeToggle() {\n    handleSelectionChange(SelectionType.All, false);\n  }\n}\nconst isBreakpointsXS = () => {\n  return typeof window === 'undefined' ? false : window.innerWidth < parseFloat(toPx(tokens.breakpoints['breakpoints-sm']) ?? '');\n};\nfunction getHeadingKey(heading) {\n  if ('id' in heading && heading.id) {\n    return heading.id;\n  }\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n  return '';\n}\nfunction IndexTable(_ref2) {\n  let {\n    children,\n    selectable = true,\n    itemCount,\n    selectedItemsCount = 0,\n    resourceName: passedResourceName,\n    loading,\n    hasMoreItems,\n    condensed,\n    onSelectionChange,\n    ...indexTableBaseProps\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable && !condensed,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\nexport { IndexTable };","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","useMemo","SortAscendingMajor","SortDescendingMajor","CSSTransition","motion","toPx","tokens","debounce","useToggle","useIsomorphicLayoutEffect","classNames","styles","IndexProvider","Cell","Row","useIsBulkActionsSticky","SELECT_ALL_ITEMS","SelectionType","getTableHeadingsBySelector","EmptySearchResult","ScrollContainer","BulkActions","SelectAllActions","useIndexValue","useIndexSelectionChange","useI18n","LegacyStack","Spinner","AfterInitialMount","EventListener","Checkbox","Badge","Text","UnstyledButton","Tooltip","Sticky","SCROLL_BAR_PADDING","SCROLL_BAR_DEBOUNCE_PERIOD","IndexTableBase","_ref","headings","bulkActions","promotedBulkActions","children","emptyState","sort","paginatedSelectAllActionText","lastColumnSticky","sortable","sortDirection","defaultSortDirection","sortColumnIndex","onSort","sortToggleLabels","hasZebraStriping","restProps","loading","bulkSelectState","resourceName","bulkActionsAccessibilityLabel","selectMode","selectable","paginatedSelectAllText","itemCount","hasMoreItems","selectedItemsCount","condensed","handleSelectionChange","i18n","value","hasMoreLeftColumns","toggle","toggleHasMoreLeftColumns","tablePosition","top","left","tableHeadingRects","scrollableContainerElement","tableElement","condensedListElement","loadingElement","tableInitialized","setTableInitialized","stickyWrapper","setStickyWrapper","hideScrollContainer","setHideScrollContainer","tableHeadings","stickyTableHeadings","stickyHeaderWrapperElement","firstStickyHeaderElement","stickyHeaderElement","scrollBarElement","scrollContainerElement","scrollingWithBar","scrollingContainer","lastSortedColumnIndex","renderAfterSelectEvent","lastSelectedItemsCount","hasSelected","current","bulkActionsIntersectionRef","tableMeasurerRef","isBulkActionsSticky","bulkActionsAbsoluteOffset","bulkActionsMaxWidth","bulkActionsOffsetLeft","computeTableDimensions","tableBodyRef","node","handleSelectAllItemsInStore","Page","All","calculateFirstHeaderOffset","offsetWidth","resizeTableHeadings","boundingRect","getBoundingClientRect","map","heading","offsetLeft","length","style","elementStyle","getComputedStyle","boxWidth","minWidth","paddingLeft","paddingRight","forEach","index","isBreakpointsXS","resizeTableScrollBar","setProperty","debounceResizeTableScrollbar","trailing","canScrollRight","setCanScrollRight","handleCanScrollRight","tableRect","scrollableRect","width","canFitStickyColumn","setCanFitStickyColumn","handleCanFitStickyColumn","checkboxColumnWidth","firstStickyColumnWidth","lastColumnIsNotTheFirst","lastStickyColumnWidth","restOfContentMinWidth","handleResize","handleScrollContainerScroll","canScrollLeft","scrollLeft","handleScrollBarScroll","hasBulkActions","Boolean","headingsMarkup","renderHeading","reduce","acc","concat","bulkActionsSelectable","stickyColumnHeaderStyle","undefined","stickyColumnHeader","createElement","className","TableHeading","key","getHeadingKey","spacing","wrap","alignment","FirstStickyHeaderElement","ref","renderCheckboxContent","renderHeadingContent","stickyHeadingsMarkup","renderStickyHeading","selectedItemsCountLabel","handleTogglePage","paginatedSelectAllAction","getPaginatedSelectAllAction","loadingTransitionClassNames","enter","enterActive","exit","exitActive","loadingMarkup","in","timeout","parseInt","nodeRef","appear","unmountOnExit","LoadingPanel","LoadingPanelRow","size","LoadingPanelText","translate","resourceNamePlural","plural","toLocaleLowerCase","stickyTableClassNames","StickyTable","shouldShowBulkActions","bulkActionClassNames","BulkActionsWrapper","BulkActionsWrapperSticky","shouldShowActions","promotedActions","actions","bulkActionsMarkup","insetBlockStart","insetInlineStart","onSelectModeToggle","handleSelectModeToggle","isSticky","stickyHeaderMarkup","role","boundingElement","stickyHeaderClassNames","StickyTableHeader","selectAllActionsClassName","SelectAllActionsWrapper","selectAllActionsMarkup","label","accessibilityLabel","selected","onToggleAll","headerMarkup","HeaderWrapper","unselectable","StickyTableColumnHeader","StickyTableHeadings","stickyContent","scrollBarWrapperClassNames","ScrollBarContainer","scrollBarContainerCondensed","scrollBarContainerHidden","scrollBarClassNames","ScrollBarContent","scrollBarMarkup","onMount","onScroll","ScrollBar","isSortable","some","tableClassNames","Table","disableTextSelection","ZebraStriping","emptyStateMarkup","title","description","withIllustration","sharedMarkup","Fragment","event","handler","condensedClassNames","CondensedList","bodyMarkup","scrollableContainerRef","HeadingRow","tableContentMarkup","EmptySearchResultWrapper","tableWrapperClassNames","IndexTableWrapper","IndexTableWrapperWithBulkActions","IndexTable","isSecond","isLast","hasSortable","headingAlignment","headingContentClassName","hidden","flush","stickyPositioningStyle","headingContent","checkboxClassName","checkboxContent","ColumnHeaderCheckboxWrapper","labelHidden","onChange","handleSelectPage","checked","handleSortHeadingClick","direction","defaultTooltipProps","tooltipWidth","activatorWrapper","dismissOnMouseOut","persistOnClick","tooltipPersistsOnClick","defaultHeaderTooltipProps","padding","borderRadius","content","tooltipContent","preferredPosition","new","status","as","visuallyHidden","isCurrentlySorted","isPreviouslySorted","isRenderAfterSelectEvent","isAscending","newDirection","SourceComponent","iconMarkup","TableHeadingSortIcon","focusable","TableHeadingSortSvg","defaultSortButtonProps","onClick","TableHeadingSortButton","tabIndex","sortMarkup","TableHeadingTooltipUnderlinePlaceholder","SortableTableHeadingWithCustomMarkup","tooltipDirection","sortTooltipContent","Object","assign","TableHeadingUnderline","SortableTableHeaderWrapper","position","headingStyle","stickyHeadingClassName","customActionText","itemsLength","actionText","onAction","window","innerWidth","parseFloat","breakpoints","id","_ref2","passedResourceName","onSelectionChange","indexTableBaseProps"],"sources":["/Users/arina/Documents/concordia-bootcamps/MyFinalProject/frontend/node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { SortAscendingMajor, SortDescendingMajor } from '@shopify/polaris-icons';\nimport { CSSTransition } from 'react-transition-group';\nimport { motion, toPx, tokens } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { useIsomorphicLayoutEffect } from '../../utilities/use-isomorphic-layout-effect.js';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './IndexTable.scss.js';\nimport { IndexProvider } from '../IndexProvider/IndexProvider.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { Row } from './components/Row/Row.js';\nimport { useIsBulkActionsSticky } from '../BulkActions/hooks/use-is-bulk-actions-sticky.js';\nimport { SELECT_ALL_ITEMS, SelectionType } from '../../utilities/index-provider/types.js';\nimport { getTableHeadingsBySelector } from './utilities/utilities.js';\nimport { EmptySearchResult } from '../EmptySearchResult/EmptySearchResult.js';\nimport { ScrollContainer } from './components/ScrollContainer/ScrollContainer.js';\nimport { BulkActions } from '../BulkActions/BulkActions.js';\nimport { SelectAllActions } from '../SelectAllActions/SelectAllActions.js';\nimport { useIndexValue, useIndexSelectionChange } from '../../utilities/index-provider/hooks.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { LegacyStack } from '../LegacyStack/LegacyStack.js';\nimport { Spinner } from '../Spinner/Spinner.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\nimport { Badge } from '../Badge/Badge.js';\nimport { Text } from '../Text/Text.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Sticky } from '../Sticky/Sticky.js';\n\nconst SCROLL_BAR_PADDING = 4;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\nfunction IndexTableBase({\n  headings,\n  bulkActions = [],\n  promotedBulkActions = [],\n  children,\n  emptyState,\n  sort,\n  paginatedSelectAllActionText,\n  lastColumnSticky = false,\n  sortable,\n  sortDirection,\n  defaultSortDirection = 'descending',\n  sortColumnIndex,\n  onSort,\n  sortToggleLabels,\n  hasZebraStriping,\n  ...restProps\n}) {\n  const {\n    loading,\n    bulkSelectState,\n    resourceName,\n    bulkActionsAccessibilityLabel,\n    selectMode,\n    selectable = restProps.selectable,\n    paginatedSelectAllText,\n    itemCount,\n    hasMoreItems,\n    selectedItemsCount,\n    condensed\n  } = useIndexValue();\n  const handleSelectionChange = useIndexSelectionChange();\n  const i18n = useI18n();\n  const {\n    value: hasMoreLeftColumns,\n    toggle: toggleHasMoreLeftColumns\n  } = useToggle(false);\n  const tablePosition = useRef({\n    top: 0,\n    left: 0\n  });\n  const tableHeadingRects = useRef([]);\n  const scrollableContainerElement = useRef(null);\n  const tableElement = useRef(null);\n  const condensedListElement = useRef(null);\n  const loadingElement = useRef(null);\n  const [tableInitialized, setTableInitialized] = useState(false);\n  const [stickyWrapper, setStickyWrapper] = useState(null);\n  const [hideScrollContainer, setHideScrollContainer] = useState(false);\n  const tableHeadings = useRef([]);\n  const stickyTableHeadings = useRef([]);\n  const stickyHeaderWrapperElement = useRef(null);\n  const firstStickyHeaderElement = useRef(null);\n  const stickyHeaderElement = useRef(null);\n  const scrollBarElement = useRef(null);\n  const scrollContainerElement = useRef(null);\n  const scrollingWithBar = useRef(false);\n  const scrollingContainer = useRef(false);\n  const lastSortedColumnIndex = useRef(sortColumnIndex);\n  const renderAfterSelectEvent = useRef(false);\n  const lastSelectedItemsCount = useRef(0);\n  const hasSelected = useRef(false);\n  if (selectedItemsCount !== lastSelectedItemsCount.current) {\n    renderAfterSelectEvent.current = true;\n    lastSelectedItemsCount.current = selectedItemsCount;\n  }\n  if (!hasSelected.current && selectedItemsCount !== 0) {\n    hasSelected.current = true;\n  }\n  const {\n    bulkActionsIntersectionRef,\n    tableMeasurerRef,\n    isBulkActionsSticky,\n    bulkActionsAbsoluteOffset,\n    bulkActionsMaxWidth,\n    bulkActionsOffsetLeft,\n    computeTableDimensions\n  } = useIsBulkActionsSticky(selectMode);\n  useEffect(() => {\n    computeTableDimensions();\n  }, [computeTableDimensions, itemCount]);\n  const tableBodyRef = useCallback(node => {\n    if (node !== null && !tableInitialized) {\n      setTableInitialized(true);\n    }\n  }, [tableInitialized]);\n  const handleSelectAllItemsInStore = useCallback(() => {\n    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);\n  }, [handleSelectionChange, selectedItemsCount]);\n  const calculateFirstHeaderOffset = useCallback(() => {\n    if (!selectable) {\n      return tableHeadingRects.current[0].offsetWidth;\n    }\n    return condensed ? tableHeadingRects.current[0].offsetWidth : tableHeadingRects.current[0].offsetWidth + tableHeadingRects.current[1].offsetWidth;\n  }, [condensed, selectable]);\n  const resizeTableHeadings = useMemo(() => debounce(() => {\n    if (!tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();\n    tablePosition.current = {\n      top: boundingRect.top,\n      left: boundingRect.left\n    };\n    tableHeadingRects.current = tableHeadings.current.map(heading => ({\n      offsetWidth: heading.offsetWidth || 0,\n      offsetLeft: heading.offsetLeft || 0\n    }));\n    if (tableHeadings.current.length === 0) {\n      return;\n    }\n\n    // update left offset for first column\n    if (selectable && tableHeadings.current.length > 1) tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;\n\n    // update the min width of the checkbox to be the be the un-padded width of the first heading\n    if (selectable && firstStickyHeaderElement?.current) {\n      const elementStyle = getComputedStyle(tableHeadings.current[0]);\n      const boxWidth = tableHeadings.current[0].offsetWidth;\n      firstStickyHeaderElement.current.style.minWidth = `calc(${boxWidth}px - ${elementStyle.paddingLeft} - ${elementStyle.paddingRight} + 2px)`;\n    }\n\n    // update sticky header min-widths\n    stickyTableHeadings.current.forEach((heading, index) => {\n      let minWidth = 0;\n      if (index === 0 && (!isBreakpointsXS() || !selectable)) {\n        minWidth = calculateFirstHeaderOffset();\n      } else if (selectable && tableHeadingRects.current.length > index) {\n        minWidth = tableHeadingRects.current[index]?.offsetWidth || 0;\n      } else if (!selectable && tableHeadingRects.current.length >= index) {\n        minWidth = tableHeadingRects.current[index - 1]?.offsetWidth || 0;\n      }\n      heading.style.minWidth = `${minWidth}px`;\n    });\n  }), [calculateFirstHeaderOffset, selectable]);\n  const resizeTableScrollBar = useCallback(() => {\n    if (scrollBarElement.current && tableElement.current && tableInitialized) {\n      scrollBarElement.current.style.setProperty('--pc-index-table-scroll-bar-content-width', `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);\n      setHideScrollContainer(scrollContainerElement.current?.offsetWidth === tableElement.current?.offsetWidth);\n    }\n  }, [tableInitialized]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceResizeTableScrollbar = useCallback(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {\n    trailing: true\n  }), [resizeTableScrollBar]);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleCanScrollRight = useCallback(debounce(() => {\n    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {\n      return;\n    }\n    const tableRect = tableElement.current.getBoundingClientRect();\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    setCanScrollRight(tableRect.width > scrollableRect.width);\n  }), [lastColumnSticky]);\n  useEffect(() => {\n    handleCanScrollRight();\n  }, [handleCanScrollRight]);\n  const [canFitStickyColumn, setCanFitStickyColumn] = useState(true);\n  const handleCanFitStickyColumn = useCallback(() => {\n    if (!scrollableContainerElement.current || !tableHeadings.current.length) {\n      return;\n    }\n    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();\n    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;\n    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;\n    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1;\n    // Don't consider the last column in the calculations if it's not sticky\n    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0;\n    // Secure some space for the remaining columns to be visible\n    const restOfContentMinWidth = 100;\n    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);\n  }, [lastColumnSticky, selectable]);\n  useEffect(() => {\n    if (tableInitialized) {\n      handleCanFitStickyColumn();\n    }\n  }, [handleCanFitStickyColumn, tableInitialized]);\n  const handleResize = useCallback(() => {\n    // hide the scrollbar when resizing\n    scrollBarElement.current?.style.setProperty('--pc-index-table-scroll-bar-content-width', `0px`);\n    resizeTableHeadings();\n    debounceResizeTableScrollbar();\n    handleCanScrollRight();\n    handleCanFitStickyColumn();\n  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);\n  const handleScrollContainerScroll = useCallback((canScrollLeft, canScrollRight) => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingWithBar.current) {\n      scrollingContainer.current = true;\n      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    scrollingWithBar.current = false;\n    if (stickyHeaderElement.current) {\n      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;\n    }\n    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {\n      toggleHasMoreLeftColumns();\n    }\n    setCanScrollRight(canScrollRight);\n  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);\n  const handleScrollBarScroll = useCallback(() => {\n    if (!scrollableContainerElement.current || !scrollBarElement.current) {\n      return;\n    }\n    if (!scrollingContainer.current) {\n      scrollingWithBar.current = true;\n      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;\n    }\n    scrollingContainer.current = false;\n  }, []);\n  useIsomorphicLayoutEffect(() => {\n    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, '[data-index-table-heading]');\n    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, '[data-index-table-sticky-heading]');\n    resizeTableHeadings();\n  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);\n  useEffect(() => {\n    resizeTableScrollBar();\n    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);\n  }, [tableInitialized, resizeTableScrollBar, condensed]);\n  const hasBulkActions = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0);\n  const headingsMarkup = headings.map(renderHeading).reduce((acc, heading) => acc.concat(heading), []);\n  const bulkActionsSelectable = Boolean(promotedBulkActions.length > 0 || bulkActions.length > 0);\n  const stickyColumnHeaderStyle = tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n    minWidth: calculateFirstHeaderOffset()\n  } : undefined;\n  const stickyColumnHeader = /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.TableHeading,\n    key: getHeadingKey(headings[0]),\n    style: stickyColumnHeaderStyle,\n    \"data-index-table-sticky-heading\": true\n  }, /*#__PURE__*/React.createElement(LegacyStack, {\n    spacing: \"none\",\n    wrap: false,\n    alignment: \"center\"\n  }, selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderCheckboxContent()), selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['StickyTableHeading-second-scrolling']\n  }, renderHeadingContent(headings[0], 0)), !selectable && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FirstStickyHeaderElement,\n    ref: firstStickyHeaderElement\n  }, renderHeadingContent(headings[0], 0))));\n  const stickyHeadingsMarkup = headings.map(renderStickyHeading);\n  const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;\n  const handleTogglePage = useCallback(() => {\n    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === 'indeterminate'));\n  }, [bulkSelectState, handleSelectionChange]);\n  const paginatedSelectAllAction = getPaginatedSelectAllAction();\n  const loadingTransitionClassNames = {\n    enter: styles['LoadingContainer-enter'],\n    enterActive: styles['LoadingContainer-enter-active'],\n    exit: styles['LoadingContainer-exit'],\n    exitActive: styles['LoadingContainer-exit-active']\n  };\n  const loadingMarkup = /*#__PURE__*/React.createElement(CSSTransition, {\n    in: loading,\n    classNames: loadingTransitionClassNames,\n    timeout: parseInt(motion['motion-duration-100'], 10),\n    nodeRef: loadingElement,\n    appear: true,\n    unmountOnExit: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanel,\n    ref: loadingElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.LoadingPanelRow\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"small\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.LoadingPanelText\n  }, i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n    resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n  })))));\n  const stickyTableClassNames = classNames(styles.StickyTable, condensed && styles['StickyTable-condensed']);\n  const shouldShowBulkActions = bulkActionsSelectable && selectedItemsCount;\n  const bulkActionClassNames = classNames(styles.BulkActionsWrapper, isBulkActionsSticky && styles.BulkActionsWrapperSticky);\n  const shouldShowActions = !condensed || selectedItemsCount;\n  const promotedActions = shouldShowActions ? promotedBulkActions : [];\n  const actions = shouldShowActions ? bulkActions : [];\n  const bulkActionsMarkup = shouldShowBulkActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n    className: bulkActionClassNames,\n    style: {\n      insetBlockStart: isBulkActionsSticky ? undefined : bulkActionsAbsoluteOffset,\n      width: bulkActionsMaxWidth,\n      insetInlineStart: isBulkActionsSticky ? bulkActionsOffsetLeft : undefined\n    }\n  }, /*#__PURE__*/React.createElement(BulkActions, {\n    selectMode: selectMode,\n    promotedActions: promotedActions,\n    actions: actions,\n    onSelectModeToggle: condensed ? handleSelectModeToggle : undefined,\n    isSticky: isBulkActionsSticky,\n    width: bulkActionsMaxWidth\n  })) : null;\n  const stickyHeaderMarkup = /*#__PURE__*/React.createElement(\"div\", {\n    className: stickyTableClassNames,\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(Sticky, {\n    boundingElement: stickyWrapper\n  }, isSticky => {\n    const stickyHeaderClassNames = classNames(styles.StickyTableHeader, isSticky && styles['StickyTableHeader-isSticky']);\n    const selectAllActionsClassName = classNames(styles.SelectAllActionsWrapper, condensed && styles['StickyTableHeader-condensed'], isSticky && styles['StickyTableHeader-isSticky']);\n    const selectAllActionsMarkup = shouldShowBulkActions && !condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: selectAllActionsClassName\n    }, /*#__PURE__*/React.createElement(SelectAllActions, {\n      label: i18n.translate('Polaris.IndexTable.selected', {\n        selectedItemsCount: selectedItemsCountLabel\n      }),\n      accessibilityLabel: bulkActionsAccessibilityLabel,\n      selected: bulkSelectState,\n      selectMode: selectMode,\n      onToggleAll: handleTogglePage,\n      paginatedSelectAllText: paginatedSelectAllText,\n      paginatedSelectAllAction: paginatedSelectAllAction\n    }), loadingMarkup) : null;\n    const headerMarkup = condensed ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames(styles.HeaderWrapper, (!selectable || condensed) && styles.unselectable)\n    }, loadingMarkup, sort) : /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeaderClassNames,\n      ref: stickyHeaderWrapperElement\n    }, loadingMarkup, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableColumnHeader\n    }, stickyColumnHeader), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyTableHeadings,\n      ref: stickyHeaderElement\n    }, stickyHeadingsMarkup));\n    const stickyContent = selectAllActionsMarkup ?? headerMarkup;\n    return stickyContent;\n  }), bulkActionsMarkup);\n  const scrollBarWrapperClassNames = classNames(styles.ScrollBarContainer, condensed && styles.scrollBarContainerCondensed, hideScrollContainer && styles.scrollBarContainerHidden);\n  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles.ScrollBarContent);\n  const scrollBarMarkup = itemCount > 0 ? /*#__PURE__*/React.createElement(AfterInitialMount, {\n    onMount: resizeTableScrollBar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarWrapperClassNames,\n    ref: scrollContainerElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onScroll: handleScrollBarScroll,\n    className: styles.ScrollBar,\n    ref: scrollBarElement\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: scrollBarClassNames\n  })))) : null;\n  const isSortable = sortable?.some(value => value);\n  const tableClassNames = classNames(styles.Table, hasMoreLeftColumns && styles['Table-scrolling'], selectMode && styles.disableTextSelection, selectMode && shouldShowBulkActions && styles.selectMode, !selectable && styles['Table-unselectable'], canFitStickyColumn && styles['Table-sticky'], isSortable && styles['Table-sortable'], canFitStickyColumn && lastColumnSticky && styles['Table-sticky-last'], canFitStickyColumn && lastColumnSticky && canScrollRight && styles['Table-sticky-scrolling'], hasZebraStriping && styles.ZebraStriping);\n  const emptyStateMarkup = emptyState ? emptyState : /*#__PURE__*/React.createElement(EmptySearchResult, {\n    title: i18n.translate('Polaris.IndexTable.emptySearchTitle', {\n      resourceNamePlural: resourceName.plural\n    }),\n    description: i18n.translate('Polaris.IndexTable.emptySearchDescription'),\n    withIllustration: true\n  });\n  const sharedMarkup = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }), /*#__PURE__*/React.createElement(AfterInitialMount, null, stickyHeaderMarkup));\n  const condensedClassNames = classNames(styles.CondensedList, hasZebraStriping && styles.ZebraStriping);\n  const bodyMarkup = condensed ? /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-selectmode\": Boolean(selectMode),\n    className: condensedClassNames,\n    ref: condensedListElement\n  }, children)) : /*#__PURE__*/React.createElement(React.Fragment, null, sharedMarkup, /*#__PURE__*/React.createElement(ScrollContainer, {\n    scrollableContainerRef: scrollableContainerElement,\n    onScroll: handleScrollContainerScroll\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    ref: tableElement,\n    className: tableClassNames\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    className: styles.HeadingRow\n  }, headingsMarkup)), /*#__PURE__*/React.createElement(\"tbody\", {\n    ref: tableBodyRef\n  }, children))));\n  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.EmptySearchResultWrapper\n  }, emptyStateMarkup);\n  const tableWrapperClassNames = classNames(styles.IndexTableWrapper, Boolean(bulkActionsMarkup) && selectMode && styles.IndexTableWrapperWithBulkActions);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.IndexTable\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: tableWrapperClassNames,\n    ref: tableMeasurerRef\n  }, !shouldShowBulkActions && !condensed && loadingMarkup, tableContentMarkup), /*#__PURE__*/React.createElement(\"div\", {\n    ref: bulkActionsIntersectionRef\n  })), scrollBarMarkup);\n  function renderHeading(heading, index) {\n    const isSecond = index === 0;\n    const isLast = index === headings.length - 1;\n    const hasSortable = sortable?.some(value => value === true);\n    const headingAlignment = heading.alignment || 'start';\n    const headingContentClassName = classNames(styles.TableHeading, headingAlignment === 'center' && styles['TableHeading-align-center'], headingAlignment === 'end' && styles['TableHeading-align-end'], hasSortable && styles['TableHeading-sortable'], isSecond && styles['TableHeading-second'], isLast && !heading.hidden && styles['TableHeading-last'], !selectable && styles['TableHeading-unselectable'], heading.flush && styles['TableHeading-flush']);\n    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {\n      left: tableHeadingRects.current[0].offsetWidth\n    } : undefined;\n    const headingContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: headingContentClassName,\n      key: getHeadingKey(heading),\n      \"data-index-table-heading\": true,\n      style: stickyPositioningStyle\n    }, renderHeadingContent(heading, index));\n    if (index !== 0 || !selectable) {\n      return headingContent;\n    }\n    const checkboxClassName = classNames(styles.TableHeading, hasSortable && styles['TableHeading-sortable'], index === 0 && styles['TableHeading-first']);\n    const checkboxContent = /*#__PURE__*/React.createElement(\"th\", {\n      className: checkboxClassName,\n      key: `${heading}-${index}`,\n      \"data-index-table-heading\": true\n    }, renderCheckboxContent());\n    return [checkboxContent, headingContent];\n  }\n  function renderCheckboxContent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ColumnHeaderCheckboxWrapper\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n        resourceNamePlural: resourceName.plural\n      }),\n      labelHidden: true,\n      onChange: handleSelectPage,\n      checked: bulkSelectState\n    }));\n  }\n  function handleSortHeadingClick(index, direction) {\n    renderAfterSelectEvent.current = false;\n    hasSelected.current = false;\n    lastSortedColumnIndex.current = sortColumnIndex;\n    onSort?.(index, direction);\n  }\n  function renderHeadingContent(heading, index) {\n    let headingContent;\n    const defaultTooltipProps = {\n      width: heading.tooltipWidth ?? 'default',\n      activatorWrapper: 'div',\n      dismissOnMouseOut: true,\n      persistOnClick: heading.tooltipPersistsOnClick\n    };\n    const defaultHeaderTooltipProps = {\n      ...defaultTooltipProps,\n      padding: '4',\n      borderRadius: '2',\n      content: heading.tooltipContent,\n      preferredPosition: 'above'\n    };\n    if (heading.new) {\n      headingContent = /*#__PURE__*/React.createElement(LegacyStack, {\n        wrap: false,\n        alignment: \"center\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, heading.title), /*#__PURE__*/React.createElement(Badge, {\n        status: \"new\"\n      }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')));\n    } else if (heading.hidden) {\n      headingContent = /*#__PURE__*/React.createElement(Text, {\n        as: \"span\",\n        visuallyHidden: true\n      }, heading.title);\n    } else {\n      headingContent = heading.title;\n    }\n    if (sortable?.[index]) {\n      const isCurrentlySorted = index === sortColumnIndex;\n      const isPreviouslySorted = !isCurrentlySorted && index === lastSortedColumnIndex.current;\n      const isRenderAfterSelectEvent = renderAfterSelectEvent.current || !hasSelected.current && selectedItemsCount !== 0;\n      const isAscending = sortDirection === 'ascending';\n      let newDirection = heading.defaultSortDirection ?? defaultSortDirection;\n      let SourceComponent = newDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      if (isCurrentlySorted) {\n        newDirection = isAscending ? 'descending' : 'ascending';\n        SourceComponent = sortDirection === 'ascending' ? SortAscendingMajor : SortDescendingMajor;\n      }\n      const iconMarkup = /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(styles.TableHeadingSortIcon, heading?.alignment === 'end' && styles['TableHeadingSortIcon-heading-align-end'], isCurrentlySorted && styles['TableHeadingSortIcon-visible'])\n      }, /*#__PURE__*/React.createElement(SourceComponent, {\n        focusable: \"false\",\n        \"aria-hidden\": \"true\",\n        className: styles.TableHeadingSortSvg\n      }));\n      const defaultSortButtonProps = {\n        onClick: () => handleSortHeadingClick(index, newDirection),\n        className: classNames(styles.TableHeadingSortButton, !isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end'], isCurrentlySorted && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-currently-sorted'], isPreviouslySorted && !isRenderAfterSelectEvent && heading?.alignment === 'end' && styles['TableHeadingSortButton-heading-align-end-previously-sorted']),\n        tabIndex: selectMode ? -1 : 0\n      };\n      const sortMarkup = /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, iconMarkup, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(sortToggleLabels && selectMode && heading.tooltipContent && styles.TableHeadingTooltipUnderlinePlaceholder)\n      }, headingContent));\n      if (!sortToggleLabels || selectMode) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.SortableTableHeadingWithCustomMarkup\n        }, sortMarkup);\n      }\n      const tooltipDirection = isCurrentlySorted ? sortDirection : newDirection;\n      const sortTooltipContent = sortToggleLabels[index][tooltipDirection];\n      if (!heading.tooltipContent) {\n        return (\n          /*#__PURE__*/\n          // Regular header with sort icon and sort direction tooltip\n          React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), sortMarkup)\n        );\n      }\n      if (heading.tooltipContent) {\n        return (\n          /*#__PURE__*/\n          // Header text and sort icon have separate tooltips\n          React.createElement(\"div\", {\n            className: styles.SortableTableHeadingWithCustomMarkup\n          }, /*#__PURE__*/React.createElement(UnstyledButton, defaultSortButtonProps, /*#__PURE__*/React.createElement(Tooltip, defaultHeaderTooltipProps, /*#__PURE__*/React.createElement(\"span\", {\n            className: styles.TableHeadingUnderline\n          }, headingContent)), /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {\n            content: sortTooltipContent,\n            preferredPosition: \"above\"\n          }), iconMarkup)))\n        );\n      }\n    }\n    if (heading.tooltipContent) {\n      return (\n        /*#__PURE__*/\n        // Non-sortable header with tooltip\n        React.createElement(Tooltip, Object.assign({}, defaultHeaderTooltipProps, {\n          activatorWrapper: \"span\"\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: classNames(styles.TableHeadingUnderline, styles.SortableTableHeaderWrapper)\n        }, headingContent))\n      );\n    }\n    return headingContent;\n  }\n  function handleSelectPage(checked) {\n    handleSelectionChange(SelectionType.Page, checked);\n  }\n  function renderStickyHeading(heading, index) {\n    const position = index + 1;\n    const headingStyle = tableHeadingRects.current && tableHeadingRects.current.length > position ? {\n      minWidth: tableHeadingRects.current[position].offsetWidth\n    } : undefined;\n    const headingAlignment = heading.alignment || 'start';\n    const headingContent = renderHeadingContent(heading, index);\n    const stickyHeadingClassName = classNames(styles.TableHeading, headingAlignment === 'center' && styles['TableHeading-align-center'], headingAlignment === 'end' && styles['TableHeading-align-end'], index === 0 && styles['StickyTableHeading-second'], index === 0 && !selectable && styles.unselectable);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: stickyHeadingClassName,\n      key: getHeadingKey(heading),\n      style: headingStyle,\n      \"data-index-table-sticky-heading\": true\n    }, headingContent);\n  }\n  function getPaginatedSelectAllAction() {\n    if (!selectable || !hasBulkActions || !hasMoreItems) {\n      return;\n    }\n    const customActionText = paginatedSelectAllActionText ?? i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount,\n      resourceNamePlural: resourceName.plural.toLocaleLowerCase()\n    });\n    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate('Polaris.IndexTable.undo') : customActionText;\n    return {\n      content: actionText,\n      onAction: handleSelectAllItemsInStore\n    };\n  }\n  function handleSelectModeToggle() {\n    handleSelectionChange(SelectionType.All, false);\n  }\n}\nconst isBreakpointsXS = () => {\n  return typeof window === 'undefined' ? false : window.innerWidth < parseFloat(toPx(tokens.breakpoints['breakpoints-sm']) ?? '');\n};\nfunction getHeadingKey(heading) {\n  if ('id' in heading && heading.id) {\n    return heading.id;\n  }\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n  return '';\n}\nfunction IndexTable({\n  children,\n  selectable = true,\n  itemCount,\n  selectedItemsCount = 0,\n  resourceName: passedResourceName,\n  loading,\n  hasMoreItems,\n  condensed,\n  onSelectionChange,\n  ...indexTableBaseProps\n}) {\n  return /*#__PURE__*/React.createElement(IndexProvider, {\n    selectable: selectable && !condensed,\n    itemCount: itemCount,\n    selectedItemsCount: selectedItemsCount,\n    resourceName: passedResourceName,\n    loading: loading,\n    hasMoreItems: hasMoreItems,\n    condensed: condensed,\n    onSelectionChange: onSelectionChange\n  }, /*#__PURE__*/React.createElement(IndexTableBase, indexTableBaseProps, children));\n}\nIndexTable.Cell = Cell;\nIndexTable.Row = Row;\n\nexport { IndexTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}