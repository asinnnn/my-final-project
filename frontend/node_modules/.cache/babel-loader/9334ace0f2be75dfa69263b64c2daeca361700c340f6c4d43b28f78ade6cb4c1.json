{"ast":null,"code":"var _jsxFileName = \"/Users/arina/Documents/concordia-bootcamps/MyFinalProject/frontend/src/components/CreateUserPage/CreateUserPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateUserPage = () => {\n  _s();\n  const userInitialState = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    icon: \"\",\n    bio: \"\",\n    link: \"\"\n  };\n  const [userData, setUserData] = useState(userInitialState);\n  const [fileCanBeReadAsBytes, setFileCanBeReadAsBytes] = useState(true);\n  const handleChange = (value, name) => {\n    setUserData({\n      ...userData,\n      [name]: value\n    });\n  };\n  const handleFileChange = (event, name) => {\n    console.log(\"handle file change\");\n    setUserData({\n      ...userData,\n      [\"icon\"]: \"\"\n    });\n    readFileAsBytes(event);\n  };\n  var fileData;\n  const readFileAsBytes = async event => {\n    const files = event.target.files;\n\n    // Pass the file to the blob, not the input[0].\n    fileData = await new Blob([files[0]]);\n    // Pass getBuffer to promise.\n    var getData = await getBuffer;\n    console.log(getData);\n  };\n\n  /* \n    Create a function which will be passed to the promise\n    and resolve it when FileReader has finished loading the file.\n  */\n  function getBuffer(resolve) {\n    console.log(\"get buffer\");\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(fileData);\n    reader.onload = function () {\n      var arrayBuffer = reader.result;\n      var bytes = new Uint8Array(arrayBuffer);\n      resolve(bytes);\n    };\n  }\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isUrlValid(userData.link)) {\n      // don't submit, link error\n      console.log(\"link wrong dont submit\");\n    } else if (!fileCanBeReadAsBytes) {\n      // dont submit, file upload error\n    } else {\n      console.log(userData);\n      // submit the data :)\n      try {\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userData)\n        };\n        // await fetch('/api/tweet', requestOptions);\n        const response = await fetch(\"/user/newuser\", requestOptions);\n        const data = await response.json();\n        console.log(data);\n      } catch (err) {\n        console.log(\"Error\");\n      }\n      console.log(userData.icon);\n    }\n  };\n  const isUrlValid = async string => {\n    if (string) {\n      return true;\n    } else {\n      try {\n        await new URL(string);\n        return true;\n      } catch (err) {\n        return false;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"username\",\n        children: \"username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: userData.username,\n        minLength: \"5\",\n        maxLength: \"20\",\n        onChange: ev => handleChange(ev.target.value, \"username\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"text\",\n        value: userData.password,\n        minLength: \"5\",\n        maxLength: \"20\",\n        onChange: ev => handleChange(ev.target.value, \"password\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        value: userData.email,\n        onChange: ev => handleChange(ev.target.value, \"email\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"icon\",\n        children: \"icon:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"icon\",\n        type: \"file\",\n        value: userData.icon,\n        minLength: \"5\",\n        maxLength: \"20\",\n        onChange: ev => handleFileChange(ev, \"icon\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"bio (optional)\",\n        children: \"bio (optional):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"bio\",\n        type: \"text\",\n        value: userData.bio,\n        minLength: \"0\",\n        maxLength: \"1000\",\n        onChange: ev => handleChange(ev.target.value, \"bio\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"link\",\n        children: \"website link (optional):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"link\",\n        type: \"text\",\n        value: userData.link,\n        minLength: \"0\",\n        maxLength: \"1000\",\n        onChange: ev => handleChange(ev.target.value, \"link\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        submit: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateUserPage, \"52Pp8LUuuJ7fvpRo/t37FrprlMs=\");\n_c = CreateUserPage;\nvar _c;\n$RefreshReg$(_c, \"CreateUserPage\");","map":{"version":3,"names":["useState","useCallback","styled","jsxDEV","_jsxDEV","CreateUserPage","_s","userInitialState","username","password","email","icon","bio","link","userData","setUserData","fileCanBeReadAsBytes","setFileCanBeReadAsBytes","handleChange","value","name","handleFileChange","event","console","log","readFileAsBytes","fileData","files","target","Blob","getData","getBuffer","resolve","reader","FileReader","readAsArrayBuffer","onload","arrayBuffer","result","bytes","Uint8Array","handleSubmit","e","preventDefault","isUrlValid","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","err","string","URL","onSubmit","children","for","fileName","_jsxFileName","lineNumber","columnNumber","id","type","minLength","maxLength","onChange","ev","submit","_c","$RefreshReg$"],"sources":["/Users/arina/Documents/concordia-bootcamps/MyFinalProject/frontend/src/components/CreateUserPage/CreateUserPage.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\n\nexport const CreateUserPage = () => {\n  const userInitialState = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    icon: \"\",\n    bio: \"\",\n    link: \"\",\n  };\n  const [userData, setUserData] = useState(userInitialState);\n  const [fileCanBeReadAsBytes, setFileCanBeReadAsBytes] = useState(true);\n\n  const handleChange = (value, name) => {\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleFileChange = (event, name) => {\n    console.log(\"handle file change\");\n    setUserData({ ...userData, [\"icon\"]: \"\" });\n\n    readFileAsBytes(event);\n  };\n\n  var fileData;\n  const readFileAsBytes = async (event) => {\n    const files = event.target.files;\n\n    // Pass the file to the blob, not the input[0].\n    fileData = await new Blob([files[0]]);\n    // Pass getBuffer to promise.\n    var getData = await getBuffer;\n\n    console.log(getData);\n  };\n\n  /* \n    Create a function which will be passed to the promise\n    and resolve it when FileReader has finished loading the file.\n  */\n  function getBuffer(resolve) {\n    console.log(\"get buffer\")\n    var reader = new FileReader();\n    reader.readAsArrayBuffer(fileData);\n    reader.onload = function () {\n      var arrayBuffer = reader.result;\n      var bytes = new Uint8Array(arrayBuffer);\n      resolve(bytes);\n    };\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!isUrlValid(userData.link)) {\n      // don't submit, link error\n      console.log(\"link wrong dont submit\");\n    } else if (!fileCanBeReadAsBytes) {\n      // dont submit, file upload error\n    } else {\n      console.log(userData);\n      // submit the data :)\n      try {\n        const requestOptions = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(userData),\n        };\n        // await fetch('/api/tweet', requestOptions);\n        const response = await fetch(\"/user/newuser\", requestOptions);\n        const data = await response.json();\n\n        console.log(data);\n      } catch (err) {\n        console.log(\"Error\");\n      }\n      console.log(userData.icon);\n    }\n  };\n\n  const isUrlValid = async (string) => {\n    if (string) {\n      return true;\n    } else {\n      try {\n        await new URL(string);\n        return true;\n      } catch (err) {\n        return false;\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label for=\"username\">username:</label>\n        <input\n          id=\"username\"\n          type=\"text\"\n          value={userData.username}\n          minLength=\"5\"\n          maxLength=\"20\"\n          onChange={(ev) => handleChange(ev.target.value, \"username\")}\n        />\n        <label for=\"password\">password:</label>\n        <input\n          id=\"password\"\n          type=\"text\"\n          value={userData.password}\n          minLength=\"5\"\n          maxLength=\"20\"\n          onChange={(ev) => handleChange(ev.target.value, \"password\")}\n        />\n        <label for=\"email\">email:</label>\n        <input\n          id=\"email\"\n          type=\"email\"\n          value={userData.email}\n          onChange={(ev) => handleChange(ev.target.value, \"email\")}\n        />\n        <label for=\"icon\">icon:</label>\n        <input\n          id=\"icon\"\n          type=\"file\"\n          value={userData.icon}\n          minLength=\"5\"\n          maxLength=\"20\"\n          onChange={(ev) => handleFileChange(ev, \"icon\")}\n        />\n        <label for=\"bio (optional)\">bio (optional):</label>\n        <input\n          id=\"bio\"\n          type=\"text\"\n          value={userData.bio}\n          minLength=\"0\"\n          maxLength=\"1000\"\n          onChange={(ev) => handleChange(ev.target.value, \"bio\")}\n        />\n        <label for=\"link\">website link (optional):</label>\n        <input\n          id=\"link\"\n          type=\"text\"\n          value={userData.link}\n          minLength=\"0\"\n          maxLength=\"1000\"\n          onChange={(ev) => handleChange(ev.target.value, \"link\")}\n        />\n\n        <button submit>Submit</button>\n      </div>\n    </form>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}